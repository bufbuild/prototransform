// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.prototransform.v1alpha1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";

// CacheEntry represents the serialized form of a cached schema.
message CacheEntry {
  Schema schema = 1;
  google.protobuf.Timestamp schema_timestamp = 2;

  // An identifier for the schema. This allows a cache to verify
  // that the cached data is for the correct schema. This can be
  // useful in cases where cache keys must be shortened, to prevent
  // possible collisions from leading to the wrong schema being used.
  string id = 3;
  // If the schema was fetched for specified symbols, this is the
  // list of those symbols. If empty, this represents the entire
  // schema identified by id. But if non-empty, it could be filtered
  // with elements irrelevant to these symbols being omitted.
  repeated string included_symbols = 4;
}

// The actual cached schema. This is a separate message, instead of
// inlined into CacheEntry, for backwards compatibility with cache
// entries generated by early versions of this library.
message Schema {
  google.protobuf.FileDescriptorSet descriptors = 1;
  string version = 2;
}
